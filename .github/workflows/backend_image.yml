name: Cria uma nova imagem de backend

on:
  workflow_call:
    secrets:
      registry-username:
        required: true
      registry-password:
        required: true
    inputs:
      image-name:
        required: true
        type: string
        default: "Dockerfile"
      context:
        required: true
        type: string
        default: "."
      dockerfile:
        required: true
        type: string
      platforms:
        required: true
        type: string
      load:
        required: false
        type: boolean
        default: false
      push:
        required: false
        type: boolean
        default: false
      is-latest:
        required: false
        type: boolean
        default: false

jobs:
  image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Metadados da Imagem Docker"
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ inputs.image-name }}
          flavor:
            latest=false
          tags: |
            type=ref,event=branch
            type=sha
            type=raw,value=latest,enable=${{ inputs.is-latest }}

      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v2

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2

      - name: "Login no ghcr.io"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.registry-username }}
          password: ${{ secrets.registry-password }}

      - name: "Usa o mxdev para baixar dependÃªncias"
        run: |
          pip install mxdev
          mxdev -c mx.ini

      - name: "Gera imagem e publica no ghcr.io"
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.context }}
          platforms: ${{ inputs.platforms }}
          file: ${{ inputs.dockerfile }}
          push: ${{ inputs.push && github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          load: ${{ inputs.load }}
